{"version":3,"sources":["webpack:///./src/components/documentation/developerDocumentation.js","webpack:///./src/components/documentation/installation.js","webpack:///./src/components/documentation/operation.js","webpack:///./src/components/documentation/overview.js","webpack:///./src/components/documentation/troubleshootingGuide.js","webpack:///./src/pages/documentation.js"],"names":["DeveloperDocumentation","id","className","Installation","Operation","Overview","TroubleshootingGuide","Budget","title","class","href"],"mappings":"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","file":"component---src-pages-documentation-js-f32d4b34558aad29c1c6.js","sourcesContent":["import React from \"react\"\n\nconst DeveloperDocumentation = () => (\n  <div>\n    <h2 id=\"developer-documentation\">Developer Documentation</h2>\n    <p>\n      To build your own app, create a new python class that inherits from{\" \"}\n      <code>App</code>. When your class is instantiated by the app loader on the\n      Braille device, you will have access to useful instance variables and\n      methods that allow you to design your very own app flow.\n    </p>\n    <p>\n      For ease of development, the code is portable between the Raspberry Pi\n      with Arduino PCBs (which the Braille device works with) and computer-only\n      testing. Thus you are not required to have a device in order to build your\n      own apps. You can switch to Python terminal interaction by setting the\n      variable <code>main_cell</code> to <code>comp</code> instead of{\" \"}\n      <code>arduino</code> in the file{\" \"}\n      <code>src/app_states/main_state.txt</code>. You can run{\" \"}\n      <code>python3 src/main.py</code> once you have installed all the packages{\" \"}\n      <span className=\"italic underline\">louis</span> depends on, which can be\n      found in the <code>requirements.txt</code> file. The terminal will prompt\n      you for the number of cells you want to work with, and when relevant,\n      prompt you for the button cell index you want to press.\n    </p>\n    <p>\n      Additional tools for development are the <code>output_audio</code> and{\" \"}\n      <code>input_speech</code>\n      variables also found in <code>src/app_states/main_state.txt</code>. You\n      can turn on and turn off audio output by setting <code>output_audio</code>{\" \"}\n      to <code>true</code>\n      and <code>false</code>, respectively. The output will always be printed to\n      the terminal. You can turn on and turn off speech input by setting\n      <code>input_speech</code> to <code>true</code> and <code>false</code>,\n      respectively. When turned off, the ‘voice’ commands can be given through\n      the terminal instead.\n    </p>\n    <h3 id=\"cell\">\n      <code>Cell</code>\n    </h3>\n    <p>\n      The constructor of <code>App</code> is passed an array of{\" \"}\n      <code>Cell</code> objects, whose dynamic length is automatically\n      determined by the number of physical cells that are attached to the\n      Braille device (modularity). <code>Cell</code> contains methods that allow\n      you to interact with a specific Braille cell without having to deal with\n      the low-level hardware code.\n    </p>\n    <div className=\"my-6 border-t border-b border-gray-300 overflow-hidden relative\">\n      <table className=\"w-full text-left\">\n        <thead>\n          <tr>\n            <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100 w-2/5\">\n              Method\n            </th>\n            <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100\">\n              Description\n            </th>\n          </tr>\n        </thead>\n        <tbody className=\"align-baseline\">\n          <tr>\n            <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-purple-700\">\n              print_character(char letter)\n            </td>\n            <td className=\"p-2 border-t border-gray-300 text-xs\">\n              Prints a given character onto a Braille cell.\n            </td>\n          </tr>\n          <tr>\n            <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-purple-700\">\n              wait_for_button_press()\n            </td>\n            <td className=\"p-2 border-t border-gray-300 text-xs\">\n              Waits and returns True when the user presses the button on the\n              cell.\n            </td>\n          </tr>\n          <tr>\n            <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-purple-700\">\n              reset()\n            </td>\n            <td className=\"p-2 border-t border-gray-300 text-xs\">\n              Resets the cell to zero, i.e. flat surface.\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <h3 id=\"audio\">\n      <code>Audio</code>\n    </h3>\n    <p>\n      Your app receives an instance of <code>Audio</code> which provides methods\n      to interact with the microphone and speakers, as well as utilities for\n      speech recognition and synthesis. These functions are essential for the\n      user experience as blind users starting to learn Braille heavily rely on\n      audio.\n    </p>\n    <div className=\"my-6 border-t border-b border-gray-300 overflow-hidden relative\">\n      <table className=\"w-full text-left\">\n        <thead>\n          <tr>\n            <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100 w-2/5\">\n              Method\n            </th>\n            <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100\">\n              Description\n            </th>\n          </tr>\n        </thead>\n        <tbody className=\"align-baseline\">\n          <tr>\n            <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-purple-700\">\n              speak(string text)\n            </td>\n            <td className=\"p-2 border-t border-gray-300 text-xs\">\n              Output the given text string to the speakers using Google Cloud\n              Speech API.\n            </td>\n          </tr>\n          <tr>\n            <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-purple-700\">\n              playsound(string filename)\n            </td>\n            <td className=\"p-2 border-t border-gray-300 text-xs\">\n              Output the contents of a digital audio file to the speakers, for\n              audio output other than text strings.\n            </td>\n          </tr>\n          <tr>\n            <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-purple-700\">\n              recognize_speech([string] keywords)\n            </td>\n            <td className=\"p-2 border-t border-gray-300 text-xs\">\n              Listens for audio input and returns a string of the transcribed\n              speech. Optional relevant keywords can be passed in order to\n              improve recognition accuracy.\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <p>\n      If you would like the Audio output to be your own mp3 recording, upload\n      the file in the cache folder with the md5 hash of the output as filename.\n    </p>\n    <h3 id=\"direct\">\n      <code>Direct</code>\n    </h3>\n    <p>\n      The instance of your created class also contains a variety of inherited\n      utility functions.\n    </p>\n    <div className=\"my-6 border-t border-b border-gray-300 overflow-hidden relative\">\n      <table className=\"w-full text-left\">\n        <thead>\n          <tr>\n            <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100 w-2/5\">\n              Method\n            </th>\n            <th className=\"text-sm font-semibold text-gray-700 p-2 bg-gray-100\">\n              Description\n            </th>\n          </tr>\n        </thead>\n        <tbody className=\"align-baseline\">\n          <tr>\n            <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-purple-700\">\n              print_text(string text)\n            </td>\n            <td className=\"p-2 border-t border-gray-300 text-xs\">\n              Displays a given text over all available cells and implements\n              pagination using the button of the last cell.\n            </td>\n          </tr>\n          <tr>\n            <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-purple-700\">\n              print_character_all_cells(char c)\n            </td>\n            <td className=\"p-2 border-t border-gray-300 text-xs\">\n              Displays the same given character on all available cells.\n            </td>\n          </tr>\n          <tr>\n            <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-purple-700\">\n              print_cells_to_terminal()\n            </td>\n            <td className=\"p-2 border-t border-gray-300 text-xs\">\n              Development helper function that prints the current output on the\n              cells to the terminal, including the normal alphabet character\n              underneath the braille cells.\n            </td>\n          </tr>\n          <tr>\n            <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-purple-700\">\n              print_character_all_cells(char c)\n            </td>\n            <td className=\"p-2 border-t border-gray-300 text-xs\">\n              Displays the same given character on all available cells.\n            </td>\n          </tr>\n          <tr>\n            <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-purple-700\">\n              on_start()\n            </td>\n            <td className=\"p-2 border-t border-gray-300 text-xs\">\n              This is an abstract method that is called on the launch of your\n              app and needs to be implemented in your class.\n            </td>\n          </tr>\n          <tr>\n            <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-purple-700\">\n              on_quit()\n            </td>\n            <td className=\"p-2 border-t border-gray-300 text-xs\">\n              This is an abstract method that is called when your app is quit\n              and needs to be implemented in your class.\n            </td>\n          </tr>\n          <tr>\n            <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-purple-700\">\n              reset_cells()\n            </td>\n            <td className=\"p-2 border-t border-gray-300 text-xs\">\n              Resets all cells to zero, i.e. flat surface.\n            </td>\n          </tr>\n          <tr>\n            <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-purple-700\">\n              await_response(string[] desired_responses)\n            </td>\n            <td className=\"p-2 border-t border-gray-300 text-xs\">\n              Listens for audio input, waits for one of the desired responses to\n              be said and returns that option.\n            </td>\n          </tr>\n          <tr>\n            <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-purple-700\">\n              save_settings()\n            </td>\n            <td className=\"p-2 border-t border-gray-300 text-xs\">\n              Saves the settings of your app to the local file system.\n            </td>\n          </tr>\n          <tr>\n            <td className=\"p-2 border-t border-gray-300 font-mono text-xs text-purple-700\">\n              edit_settings()\n            </td>\n            <td className=\"p-2 border-t border-gray-300 text-xs\">\n              Provides the user with options to change the editable app\n              settings. The menu can be accessed by the user with the voice\n              command <span className=\"italic underline\">help</span> at any\n              point.\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <p>\n      <code>self.settings</code> contains a dictionary of previously stored app\n      settings from the file system. You can add the settings you need for your\n      app to the file <code>[appname]_state.txt</code> in the{\" \"}\n      <code>app_states</code> folder. If the setting is user-editable, create a\n      key “editable” which is a dictionary containing the editable settings.\n      Provide a name, description, current value and a dictionary of possible\n      values with their description.\n    </p>\n  </div>\n)\n\nexport default DeveloperDocumentation\n","import React from \"react\"\n\nconst Installation = () => (\n  <div>\n    <h2 id=\"installation\">Installation</h2>\n    <h3 id=\"setup-the-hardware\">Setup the Hardware</h3>\n    <p>\n      Place the main controller in a way such that the button is on the left\n      side. You can distinguish the top of the controller, by feeling a path on\n      your finger. To connect a cell on the controller, push it on the right\n      side of the controller, until you hear them “click”. For a cell to be\n      correctly aligned, you need to feel the button above the braille pins. To\n      connect subsequent cells, follow the same process.\n    </p>\n    <h3 id=\"setup-the-software\">Setup the Software</h3>\n    TODO\n    <p>\n      - Talk about the wifi and anything else needed.\n      <br />- Need to connect it to the internet somehow? Or we pretend that the\n      speech recognition is done offline (which we can reasonably claim since\n      there are offline versions available), but I would mention that no\n      internet connection is necessary just because otherwise they might\n      complain about it. TODO EDIT: actually we need internet connection for the\n      Headlines app.\n    </p>\n  </div>\n)\n\nexport default Installation\n","import React from \"react\"\n\nconst Operation = () => (\n  <div>\n    <h2 id=\"operation\">Operation</h2>\n    <h3 id=\"general\">General</h3>\n    <p>\n      You can find the charging port below the on/off switch on the main\n      controller. Insert the charging cable to recharge the battery of{\" \"}\n      <span className=\"font-louis\">louis</span>. <strong>Important</strong>: you\n      do not need to charge the cells, only the main controller.\n    </p>\n    <p>\n      To turn <span className=\"font-louis\">louis</span> on, press the on off\n      switch on the left side of the main controller. To turn off, press the\n      switch again. Once <span className=\"font-louis\">louis</span> is switched\n      on, you will hear the welcoming message: TODO.\n    </p>\n    <h3 id=\"open-an-application\">Open an Application</h3>\n    <p>\n      You are now in the main menu and will then hear the phrase: ‘You can now\n      open any application using voice command’. You can open any application of{\" \"}\n      <span className=\"font-louis\">louis</span> you want using the keyword{\" \"}\n      <span className=\"italic underline\">open</span> and the name of the\n      application you wish to open. For example, let’s say you wish to open the\n      Learn app. You would use the phrase{\" \"}\n      <span className=\"italic underline\">open Learn</span> in order to do that.\n    </p>\n    <h3 id=\"close-an-application\">Close an Application</h3>\n    <p>\n      To exit an app back to the main menu, you need to use either one of the\n      keywords <span className=\"italic underline\">exit</span> or{\" \"}\n      <span className=\"italic underline\">quit</span>. Thus if you are in the\n      Settings app and wish to close it, you would say{\" \"}\n      <span className=\"italic underline\">exit</span> or{\" \"}\n      <span className=\"italic underline\">quit</span> to go back to the main\n      menu.\n    </p>\n    <h3 id=\"help\">Help</h3>\n    <p>\n      While in the main menu, you can hear the list of apps installed, by saying{\" \"}\n      <span className=\"italic underline\">options</span>. If you are in the main\n      menu and wish to hear instructions of how to navigate{\" \"}\n      <span className=\"font-louis\">louis</span>, you need to say{\" \"}\n      <span className=\"italic underline\">instructions/help</span>. This would\n      read the instructions for you.\n    </p>\n    <p>\n      If you have opened an app, it will ask you whether you would like to hear\n      the instructions for that app. If at any point you wish to hear the\n      instructions for an app, you can say the word{\" \"}\n      <span className=\"italic underline\">instructions/help</span>.\n    </p>\n    <p>\n      TODO To hear general instructions : help. To hear ap instructions: help\n      while in app? -> I will implement this. We already have that you can say\n      ‘options’ at any point which will give you a list of voice command options\n      (like next, previous, or in the main app ‘open learn’, ‘open tutor’ etc.).\n    </p>\n    <h3 id=\"pagination\">Pagination</h3>\n    <p>\n      If you are using an app that requires you to read multiple words and even\n      lines of a text, you can scroll to the next word by pressing the button on\n      the last cell. If you wish to move to the previous word, then press the\n      button of the first cell.\n    </p>\n    <h3 id=\"contractions\">Contractions</h3>\n    <p>\n      You can enable or disable contractions by opening the settings menu while\n      in the main menu, by saying{\" \"}\n      <span className=\"italic underline\">settings</span>. Then it will ask you\n      which setting you want to change, to which you should say{\" \"}\n      <span className=\"italic underline\">contractions</span>. Then you can\n      either say <span className=\"italic underline\">enable contractions</span>{\" \"}\n      or <span className=\"italic underline\">disable contractions</span>.\n    </p>\n  </div>\n)\n\nexport default Operation\n","import React from \"react\"\n\nconst Overview = () => (\n  <div>\n    <h2 id=\"overview\">Overview</h2>\n    <h3 id=\"introduction\">Introduction</h3>\n    <p>\n      Thank you for choosing <span className=\"font-louis\">louis</span>, the\n      brailliant assistant. <span className=\"font-louis\">louis</span> is an\n      assistive braille learning device that uses interactive apps, games and\n      quizzes to make learning braille fun!{\" \"}\n      <span className=\"font-louis\">louis</span> is designed to suit braille\n      learners of all ages and ability. In a few simple steps you will be able\n      to begin learning braille in a way that suits you, enabling you to take\n      advantage of the many aspects of the world that require braille literacy.\n    </p>\n    <h4 id=\"audio-described-user-guide\">Audio Described User Guide</h4>\n    <p>\n      We understand the irony of providing a printed user guide for a product\n      intended to teach braille. For that reason, once{\" \"}\n      <span className=\"font-louis\">louis</span> is set up, use the voice command{\" \"}\n      <span className=\"italic underline\">user guide</span> to access an\n      interactive, audio version of this user guide.\n    </p>\n    <h4 id=\"whats-included\">What's Included?</h4>\n    <p>Inside the box you will find the following main components:</p>\n    TODO\n    <p>You should also find the following accessories:</p>\n    TODO\n    <h3 id=\"the-main-controller\">The Main Controller</h3>\n    {\n      \"<labelled diagram of the main controller showing features described below TODO>\"\n    }\n    <p>\n      The controller is the brains of <span className=\"font-louis\">louis</span>:\n      all the other parts connect to and interface with it. It should be\n      positioned such that TODO.\n    </p>\n    <p>\n      On the top of the controller there is a grille for the speaker and\n      microphone. The speaker and microphone will be the main way you interact\n      with <span className=\"font-louis\">louis</span> whilst you learn braille.\n      On the left you will find a power switch. On the back there is a charging\n      port which the charging cable can be attached to. On the right there is a\n      cell port to which refreshable cells can be attached.\n    </p>\n    <h3 id=\"refreshable-cells\">Refreshable Cells</h3>\n    {\"<labelled diagram of a cell showing features described below TODO>\"}\n    <p>\n      Cells are the way that you learn braille with{\" \"}\n      <span className=\"font-louis\">louis</span>. Each cell contains a\n      refreshable output of a single braille character, and an input button. On\n      the side it contains connection ports, allowing the cell to be connected\n      to the main controller, and multiple cells to be chained together. The\n      cell should be positioned such that the refreshable output and button are\n      facing upwards, with the button above the refreshable cell.\n    </p>\n    <p>\n      Modularity is one of the core concepts of{\" \"}\n      <span className=\"font-louis\">louis</span>, enabling you to add more cells\n      to <span className=\"font-louis\">louis</span> as your learning progresses.\n      Each cell is identical, they can be chained together in any order provided\n      that the controller is connected to the left-most cell.\n    </p>\n    <h3 id=\"interacting-with-louis\">\n      Interacting with <span className=\"font-louis\">louis</span>\n    </h3>\n    <h4 id=\"audio-speech-output\">Audio Speech Output</h4>\n    <p>\n      When <span className=\"font-louis\">louis</span> wants to tell you\n      something, whether that be a navigation option, your current progress, or\n      the instructions for a specific app, it will do so by speaking to you\n      through the audio speech output. This uses the speaker built-in to the\n      controller.\n    </p>\n    <h4 id=\"audio-speech-input\">Audio Speech Input</h4>\n    <p>\n      When you want to tell <span className=\"font-louis\">louis</span> something,\n      whether that be an answer in response to a question posed by an app or a\n      request for a new app to be launched, you will do so by speaking the\n      phrase. There is a microphone inside the main controller that will\n      understand what you have said. Note that you do not need to bend over and\n      speak into the main controller, the microphone has been calibrated to work\n      with you positioned normally in front of{\" \"}\n      <span className=\"font-louis\">louis</span>.\n    </p>\n    <h4 id=\"braille-output-through-the-cells\">\n      Braille Output Through the Cells\n    </h4>\n    <p>\n      When an app wants to output one or more braille characters, it will do so\n      using the cells connected to the right of the main controller. You will\n      then be able to read the character by placing your finger through the\n      reading window on the cell and feeling the raised dots.\n    </p>\n    <h4 id=\"selection-of-a-particular-cell\">Selection of a Particular Cell</h4>\n    <p>\n      If you need to select a specific cell, for instance if{\" \"}\n      {\"<example of why you would need to select a specific cell TODO>\"}, then\n      you can do so by pressing the button above the reading window on the\n      desired cell.\n    </p>\n  </div>\n)\n\nexport default Overview\n","import React from \"react\"\n\nconst TroubleshootingGuide = () => (\n  <div>\n    <h2 id=\"troubleshooting-guide\">Troubleshooting Guide</h2>\n  </div>\n)\n\nexport default TroubleshootingGuide\n","import React from \"react\"\nimport DeveloperDocumentation from \"../components/documentation/developerDocumentation\"\nimport Installation from \"../components/documentation/installation\"\nimport Operation from \"../components/documentation/operation\"\nimport Overview from \"../components/documentation/overview\"\nimport TroubleshootingGuide from \"../components/documentation/troubleshootingGuide\"\nimport SEO from \"../components/seo\"\nimport \"./documentation.css\"\n\nconst Budget = () => (\n  <>\n    <SEO title=\"Documentation\" />\n\n    <div class=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:px-8\">\n      <h1 className=\"text-2xl leading-8 font-semibold font-display text-gray-900 sm:text-3xl sm:leading-9\">\n        User Guide\n      </h1>\n      <div className=\"mt-6 border-t border-gray-200 grid grid-cols-1 lg:grid-cols-12 gap-12 pt-8 lg:gap-6\">\n        <div className=\"lg:col-span-4\">\n          <ul className=\"sticky top-8 space-y-5 text-sm leading-5 text-gray-900 font-medium\">\n            <li className=\"space-y-3\">\n              <a\n                className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                href=\"#overview\"\n              >\n                Overview\n              </a>\n              <ul className=\"pl-3 space-y-3\">\n                <li className=\"space-y-3\">\n                  <a\n                    className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                    href=\"#introduction\"\n                  >\n                    Introduction\n                  </a>\n                  <ul className=\"pl-3 space-y-3\">\n                    <li>\n                      <a\n                        className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                        href=\"#audio-described-user-guide\"\n                      >\n                        Audio Described User Guide\n                      </a>\n                    </li>\n                    <li>\n                      <a\n                        className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                        href=\"#whats-included\"\n                      >\n                        What's Included?\n                      </a>\n                    </li>\n                  </ul>\n                </li>\n                <li className=\"space-y-3\">\n                  <a\n                    className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                    href=\"#the-main-controller\"\n                  >\n                    The Main Controller\n                  </a>\n                </li>\n                <li className=\"space-y-3\">\n                  <a\n                    className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                    href=\"#refreshable-cells\"\n                  >\n                    Refreshable Cells\n                  </a>\n                </li>\n                <li className=\"space-y-3\">\n                  <a\n                    className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                    href=\"#interacting-with-louis\"\n                  >\n                    Interacting with <span className=\"font-louis\">louis</span>\n                  </a>\n                  <ul className=\"pl-3 space-y-3\">\n                    <li>\n                      <a\n                        className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                        href=\"#audio-speech-output\"\n                      >\n                        Audio Speech Output\n                      </a>\n                    </li>\n                    <li>\n                      <a\n                        className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                        href=\"#audio-speech-input\"\n                      >\n                        Audio Speech Input\n                      </a>\n                    </li>\n                    <li>\n                      <a\n                        className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                        href=\"#braille-output-through-the-cells\"\n                      >\n                        Braille Ouptut Through the Cells\n                      </a>\n                    </li>\n                    <li>\n                      <a\n                        className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                        href=\"#selection-of-a-particular-cell\"\n                      >\n                        Selection of a Particular Cell\n                      </a>\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n            <li className=\"space-y-3\">\n              <a\n                className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                href=\"#installation\"\n              >\n                Installation\n              </a>\n              <ul className=\"pl-3 space-y-3\">\n                <li>\n                  <a\n                    className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                    href=\"#setup-the-hardware\"\n                  >\n                    Setup the Hardware\n                  </a>\n                </li>\n                <li>\n                  <a\n                    className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                    href=\"#setup-the-software\"\n                  >\n                    Setup the Software\n                  </a>\n                </li>\n              </ul>\n            </li>\n            <li className=\"space-y-3\">\n              <a\n                className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                href=\"#operation\"\n              >\n                Operation\n              </a>\n              <ul className=\"pl-3 space-y-3\">\n                <li>\n                  <a\n                    className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                    href=\"#general\"\n                  >\n                    General\n                  </a>\n                </li>\n                <li>\n                  <a\n                    className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                    href=\"#open-an-application\"\n                  >\n                    Open an Application\n                  </a>\n                </li>\n                <li>\n                  <a\n                    className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                    href=\"#close-an-application\"\n                  >\n                    Close an Application\n                  </a>\n                </li>\n                <li>\n                  <a\n                    className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                    href=\"#help\"\n                  >\n                    Help\n                  </a>\n                </li>\n                <li>\n                  <a\n                    className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                    href=\"#pagination\"\n                  >\n                    Pagination\n                  </a>\n                </li>\n                <li>\n                  <a\n                    className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                    href=\"#contractions\"\n                  >\n                    Contractions\n                  </a>\n                </li>\n              </ul>\n            </li>\n            <li className=\"space-y-3\">\n              <a\n                className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                href=\"#troubleshooting-guide\"\n              >\n                Troubleshooting Guide\n              </a>\n            </li>\n            <li className=\"space-y-3\">\n              <a\n                className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                href=\"#developer-documentation\"\n              >\n                Developer Documentation\n              </a>\n              <ul className=\"pl-3 space-y-3\">\n                <li>\n                  <a\n                    className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                    href=\"#cell\"\n                  >\n                    Cell\n                  </a>\n                </li>\n                <li>\n                  <a\n                    className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                    href=\"#audio\"\n                  >\n                    Audio\n                  </a>\n                </li>\n                <li>\n                  <a\n                    className=\"block text-gray-900 hover:text-gray-700 transition ease-in-out duration-150\"\n                    href=\"#direct\"\n                  >\n                    Direct\n                  </a>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </div>\n        <div className=\"lg:col-span-8\">\n          <div className=\"prose\">\n            <Overview />\n            <hr />\n            <Installation />\n            <hr />\n            <Operation />\n            <hr />\n            <TroubleshootingGuide />\n            <hr />\n            <DeveloperDocumentation />\n          </div>\n        </div>\n      </div>\n    </div>\n  </>\n)\n\nexport default Budget\n"],"sourceRoot":""}